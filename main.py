import logging
from aiogram import Bot, Dispatcher, executor, types
from buttons import *
from bot_commands import *
from funk import *
from aiogram.types import BotCommand, BotCommandScopeDefault, ReplyKeyboardRemove
from aiogram.dispatcher.filters.state import State, StatesGroup
import asyncio
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from geopy.geocoders import Nominatim
from aiogram.types import ContentType,Message
from state import *
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from googletrans import Translator
from clyent_info import *
from openpyxl import load_workbook






API_TOKEN = '6162366361:AAEG3cdanJqLn2BTj82ZPGRrruk1qb1TFGI'

admin = 6270800396
admin1 = 6270800396
logging.basicConfig(level=logging.INFO)


bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot,storage=MemoryStorage())






db = Tablitsa()
translator = Translator()


@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    username = message.from_user.username
    conn = sqlite3.connect("china.db")
    c = conn.cursor()
    user_id = message.from_user.id
    db.create_table()
    db.create_client()
    c.execute(f"SELECT user_id FROM users WHERE user_id = {user_id}")
    data = c.fetchone()
    if data is None:
        c.execute("INSERT INTO users (username, user_id) VALUES (?, ?)", (username, user_id) )
        conn.commit()
        await message.reply(f"*Assalomu aleykum {username}\nexpressuz_botimizga Xush kelibsz ‚ò∫Ô∏è\n\nTilni tanlang –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫üëá*",parse_mode='markdown',reply_markup=til)
        await set_all_default_commands(bot)
    else:
        await message.answer("*Siz ro'yxatdan o'tkansz ‚úÖ\n\n–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ‚úÖ*",parse_mode='markdown',reply_markup=til)
        await set_all_default_commands(bot)


############################################################################ LANGUAGE
@dp.message_handler(lambda message: message.text in ["üá∫üáø Uzbek", "üá∑üá∫ –†—É—Å—Å–∫–∏–π"])
async def choose_lang(message: types.Message):
    chat_id = message.chat.id
    from_user_id = message.from_user.id
    admin = '6270800396'
    test = db.select_main(admin)
    uzb_text = test[5]
    ru_text = test[6]

    if message.text == "üá∫üáø Uzbek":
            lang = 'uz'
            text = "*Assalomu alaykum  Express kuryeri tovarlarni bizning omborimizga kelganidan keyin 5 kun - 12 kun ichida yetkazib beradi. Nega biz bilan ishlayapsiz?\n\n1. Xushmuomalalik\n2. 24/7 sizning xizmatingizda va yangiliklar, qaysi kunlarni mag'lub etishni va mag'lub qilmaslikni taklif qiladi\n3. Bonuslar va chegirmalar oling\n4. Omborga har bir tovar qabul qilish uchun 100% javobgarlik\n5. Arzon narxda sifatli va tez yetkazib berish*"
            text_1 = f"*{uzb_text}*"


    if message.text == "üá∑üá∫ –†—É—Å—Å–∫–∏–π":
            lang = 'ru'
            text = "*–ú–∏—Ä –≤–∞–º –ö—É—Ä—å–µ—Ä  Express –¥–æ—Å—Ç–∞–≤–∏—Ç –≥—Ä—É–∑ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –¥–Ω–µ–π - 12 –¥–Ω–µ–π –ø–æ—Å–ª–µ –ø—Ä–∏–±—ã—Ç–∏—è –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥. –ü–æ—á–µ–º—É –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å –Ω–∞–º–∏?\n\n1. –í–µ–∂–ª–∏–≤–æ—Å—Ç—å\n2. 24/7 –∫ –≤–∞—à–∏–º —É—Å–ª—É–≥–∞–º –∏ –Ω–æ–≤–æ—Å—Ç–∏, –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é—â–∏–µ, –≤ –∫–∞–∫–∏–µ –¥–Ω–∏ –±–∏—Ç—å –∏ –Ω–µ –±–∏—Ç—å\n3. –ü–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã –∏ —Å–∫–∏–¥–∫–∏\n4. 100% –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –∫–∞–∂–¥–æ–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥\n5. –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –Ω–∏–∑–∫–æ–π —Ü–µ–Ω–µ *"
            text_1 = f"*{ru_text}*"

    db.update_lang(lang, from_user_id)
    admin = '6270800396'
    image = db.select_video(admin)
    for i in image:

        try:
            await message.answer(text, parse_mode='markdown',reply_markup=main_nopka(lang))
            await message.answer_video(i,caption=text_1,parse_mode='markdown')
        except:
            await message.answer_photo(i,caption=text_1,parse_mode='markdown')
############################################################################ LANGUAGE


@dp.message_handler(lambda message: message.text in ['–ø–æ–ª—É—á–∏—Ç—å ID –Ω–æ–º–µ—Ä', 'ID raqam olish'])
async def send_id_number(message: types.Message):
    from_user_id = message.from_user.id
    lang = db.select_lang(from_user_id)[0]

    if lang == "uz":
        text = "*ID raqam olish uchun sizdan kerak boladigan hujjatlarüìÑ‚ùó\n\n1.Pasport ‚úÖ\n2.Doim aloqada boladigan raqam ‚úÖ\n3.Mahsulotni yetkazib berish uchun yashash manzilingiz‚úÖ\n\nID raqam olish uchun admin yoki managerga malumotlarni yuboring va sizga ID raqam beriladi ‚úÖ*"
    elif lang == 'ru':
        text = "*–î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞üìÑ‚ùó\n\n1.–ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–π ‚úÖ\n2. –ù–æ–º–µ—Ä, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ —Å–≤—è–∑—å ‚úÖ\n3.–ú–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ ‚úÖ\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä, –∏ –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–∏—Å–≤–æ–µ–Ω –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä.‚úÖ*"

    await message.answer(text, parse_mode='markdown')


########################################################################################### PRICE
@dp.message_handler(lambda message: message.text in ['–¶–µ–Ω—ã', 'Narxlar'])
async def send_id_number(message: types.Message):
    from_user_id = message.from_user.id
    lang = db.select_lang(from_user_id)[0]

    if lang == "uz":
        text = "*1.Yuklar narxi 11$ dan xech qanday minimalkalarsiz *"
    elif lang == 'ru':
        text = "*1.–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ—Ç 11$ –¥–æ–ª–ª–∞—Ä–æ–≤ –±–µ–∑ –º–∏–Ω–∏–º—É–º–∞.*"
    await message.answer(text, parse_mode='markdown')


@dp.message_handler(lambda message: message.text in ['–Ω–∞–∑–∞–¥', 'ortga'])
async def send_id_number(message: types.Message):
    from_user_id = message.from_user.id
    lang = db.select_lang(from_user_id)[0]

    if lang == "uz":
        text = "*Tilni tanlang üëá*"
    elif lang == 'ru':
        text = "*–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ üëá*"

    await message.answer(text, parse_mode='markdown',reply_markup=til)





############################################################################ SEND LOCATION

@dp.message_handler(lambda message: message.text in ['Bizning Manzil üìç', '–ù–∞—à –∞–¥—Ä–µ—Å üìç'])
async def send_id_number(message: types.Message):
    from_user_id = message.from_user.id
    lang = db.select_lang(from_user_id)[0]

    if lang == "uz":
        text = "*Bizning manzil üìç : –ë–æ–≥–∏–±—É—Å—Ç–æ–Ω 35–ê, Tashkent*"
    elif lang == 'ru':
        text = "*–ù–∞—à –∞–¥—Ä–µ—Å üìç: –≥. –¢–∞—à–∫–µ–Ω—Ç, –ë–æ–≥–∏–±—É—Å—Ç–æ–Ω 35–ê*"
    await bot.send_location(chat_id=from_user_id,latitude = 41.280921,longitude = 69.242363)
    await message.answer(text=text,parse_mode='markdown')

@dp.message_handler(lambda message: message.text in ['–§–æ—Ç–æ –æ—Ç—á–µ—Ç', 'Foto malumotlar'])
async def send_id_number(message: types.Message):
    from_user_id = message.from_user.id
    lang = db.select_lang(from_user_id)[0]

    if lang == "uz":
        text = "*Foto malumotlar kanalimiz*"
    elif lang == 'ru':
        text = "*–ù–∞—à –∫–∞–Ω–∞–ª —Ñ–æ—Ç–æ –æ—Ç—á–µ—Ç*"
    await message.answer(text=text,parse_mode='markdown',reply_markup=t(lang))



@dp.message_handler(commands=['update_media'])
async def send_welcome(message: types.Message):
    text = "*Rasm yoki Video jonating*"
    await bot.send_message(chat_id=admin,text=text,parse_mode='markdown')



@dp.message_handler(content_types=ContentType.PHOTO,state=None)
async def reaction_to_photo_video(message: types.Message):
    user_id = message.from_user.id
    photo_id = message.photo[-1].file_id
    db.update_video(photo_id,user_id)
    text = "*Rasm Yuklandi ‚úÖ Textni kiriting*"
    await bot.send_message(chat_id=admin,text=text,parse_mode='markdown')
    await Royxat.text_desc.set()

@dp.message_handler(content_types=ContentType.VIDEO,state=None)
async def reaction_to_video(message: types.Message):
    user_id = message.from_user.id
    video_id = message.video.file_id
    db.update_video(video_id,user_id)
    text = "*Video Yuklandi ‚úÖ Textni kiriting*"
    await bot.send_message(chat_id=admin,text=text,parse_mode='markdown')
    await Royxat.text_desc.set()



@dp.message_handler(state=Royxat.text_desc)
async def step_1(msg:types.Message,state:FSMContext):
    text_desc = msg.text
    text = '*finish ‚úÖ*'
    admin = '6270800396'
    db.update_text(text_desc,admin)
    rest = translator.translate(text_desc, dest="ru")
    russ_text = rest.text
    db.update_textrus(russ_text,admin)
    await bot.send_message(chat_id=admin,text=text,parse_mode='markdown')
    await state.finish()



@dp.message_handler(lambda message: message.text in ['Tovarni ko\'rish', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–¥—É–∫—Ç'])
async def send_id_number(message: types.Message):
    from_user_id = message.from_user.id
    lang = db.select_lang(from_user_id)[0]
    if lang == "uz":
        text = "*shtrix kodni kiriting*"
    elif lang == 'ru':
        text = "*–≤–≤–µ–¥–∏—Ç–µ —à—Ç—Ä–∏—Ö-–∫–æ–¥*"
    await message.answer(text=text,parse_mode='markdown')
    await Royxat.shtrix.set()


# 9853925148774


@dp.message_handler(state=Royxat.shtrix)
async def step_1(message:types.Message,state:FSMContext):
    from_user_id = message.from_user.id
    lang = db.select_lang(from_user_id)[0]
    shtrix = message.text
    conn = sqlite3.connect('china.db')
    c = conn.cursor()
    clients = db.select_clients(shtrix)

    try:
        if lang == 'uz':
            await message.answer(f"*N¬∞ {clients[0]}\ntrack raqam {clients[1]}\nmahsulot {clients[2]}\nmahsulot soni {clients[4]}\nkod: {clients[3]}*",parse_mode='markdown')
            await state.finish()
        elif lang == 'ru':
            await message.answer(f"*N¬∞ {clients[0]}\ntrack –Ω–æ–º–µ—Ä  {clients[1]}\n–ø—Ä–æ–¥—É–∫—Ç {clients[2]}\n–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ {clients[4]}\n–∫–æ–¥: {clients[3]}*",parse_mode='markdown')
        await state.finish()
    except:
        await message.answer('*error*',parse_mode='markdown')
    await state.finish()



@dp.message_handler(lambda message: message.text in ['Xatoliklarni to\'g\'irlash', '–ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏'])
async def send_id_number(message: types.Message):
    from_user_id = message.from_user.id
    lang = db.select_lang(from_user_id)[0]
    if lang == "uz":
        text = "*Xatolikni to'g'irlash uchun track codinggizni va tavarni nomini kiriting ‚úçÔ∏è*"
    elif lang == 'ru':
        text = "*–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ–∫-–∫–æ–¥ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞, —á—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É ‚úçÔ∏è*"
    await message.answer(text=text,parse_mode='markdown')
    await Royxat.ariza.set()


@dp.message_handler(state=Royxat.ariza)
async def step_1(message:types.Message,state:FSMContext):
    from_user_id = message.from_user.id
    first_name = message.from_user.username
    lang = db.select_lang(from_user_id)[0]
    add = -1001871139971
    if lang == "uz":
        text = "*so'rov yuborildi ‚úÖ*"
    elif lang == 'ru':
        text = "*–∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ‚úÖ*"
    ariza = message.text
    await state.update_data(
        {
        'ariza':ariza
        }
    )
    await message.answer(f"{text} ",parse_mode='markdown')
    await bot.send_message(chat_id=add,text=f"@{first_name}\n*so'rov kim tomonidan yuborildi* üëá\n*{ariza}*",parse_mode='markdown')
    await state.finish()


##############################################################################################

@dp.message_handler(commands=['update_db'])
async def send_welcome(message: types.Message):
    await message.answer('*excel faylni jo\'nating*',parse_mode='markdown')
    await Royxat.db.set()


@dp.message_handler(content_types=types.ContentType.DOCUMENT,state=Royxat.db)
async def handle_document(message: types.Message,state:FSMContext):
    conn = sqlite3.connect("china.db")
    c = conn.cursor()
    document = message.document
    file_name = 'new_file.xlsx'  
    await bot.download_file_by_id(document.file_id, file_name)

    book = load_workbook(filename=file_name)
    sheet = book['Sheet1']
    for i in range(1, sheet.max_row + 1):
        a = sheet['A' + str(i)].value
        b = sheet['B' + str(i)].value
        cb = sheet['D' + str(i)].value
        d = sheet['C' + str(i)].value
        c.execute("INSERT INTO clients (A,B,C,D) VALUES (?,?,?,?)",(a,b,cb,d))
        conn.commit()
    conn.close()
    await message.answer("added")
    await state.finish()

    


@dp.message_handler(commands=['delete_db'])
async def send_welcome(message: types.Message):
    conn = sqlite3.connect('china.db')
    c = conn.cursor()
    c.execute("DELETE FROM clients ")
    conn.commit()
    await message.answer('*Malumotlar ochirildi*',parse_mode='markdown')




if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)


# ispravleniya oshibki track code va tavar nomini
